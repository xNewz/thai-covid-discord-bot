import discord
import aiohttp
import json
import os
from discord.ext import commands

TOKEN = os.getenv("DISCORD_TOKEN")

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='/', intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ Bot {bot.user} is online")
    await bot.change_presence(activity=discord.Game("/covid, /lotto, /check_lotto"))

async def get_data_url(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            return await response.text()

@bot.command()
async def covid(ctx):
    try:
        raw = await get_data_url('https://disease.sh/v3/covid-19/countries/thailand')
        data = json.loads(raw)

        e = discord.Embed(
            title="‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå COVID-19 ‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢",
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å [disease.sh](https://disease.sh)",
            color=0x008080
        )

        e.set_thumbnail(url=data['countryInfo']['flag'])

        e.add_field(name='üò∑ ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏™‡∏∞‡∏™‡∏°', value=f"{data['cases']:,} (+{data['todayCases']:,})", inline=True)
        e.add_field(name='‚úÖ ‡∏´‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏∞‡∏™‡∏°', value=f"{data['recovered']:,} (+{data['todayRecovered']:,})", inline=True)
        e.add_field(name='‚ò†Ô∏è ‡πÄ‡∏™‡∏µ‡∏¢‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏™‡∏∞‡∏™‡∏°', value=f"{data['deaths']:,} (+{data['todayDeaths']:,})", inline=True)
        e.add_field(name='üß™ ‡∏ï‡∏£‡∏ß‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', value=f"{data['tests']:,}", inline=True)
        e.add_field(name='üìä ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏¢‡∏π‡πà', value=f"{data['active']:,}", inline=True)

        e.set_footer(text=f"üë®‚Äçüíª ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ Pargorn Ruasijan")

        await ctx.send(embed=e)
    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def lotto(ctx):
    try:
        url = "https://lotto.api.rayriffy.com/latest"
        raw = await get_data_url(url)
        data = json.loads(raw)

        if data["status"] != "success":
            await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡πÑ‡∏î‡πâ")
            return

        response = data["response"]
        date = response["date"]
        prizes = response["prizes"]
        running = response["runningNumbers"]

        embed = discord.Embed(
            title=f"üéØ ‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏• ‡∏á‡∏ß‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {date}",
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å [lotto.api.rayriffy.com](https://lotto.api.rayriffy.com/swagger)",
            color=0xFF0000
        )

        def find_prize(prize_id):
            return next((p for p in prizes if p["id"] == prize_id), None)

        def find_running(running_id):
            return next((r for r in running if r["id"] == running_id), None)

        # ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1
        prize_1 = find_prize("prizeFirst")
        if prize_1:
            embed.add_field(
                name=f"üèÜ {prize_1['name']} ({int(prize_1['reward']):,})",
                value=", ".join(prize_1["number"]),
                inline=True
            )

        # ‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1
        near_1 = find_prize("prizeFirstNear")
        if near_1:
            embed.add_field(
                name=f"üî¢ {near_1['name']} ({int(near_1['reward']):,})",
                value=", ".join(near_1["number"]),
                inline=True
            )

        # ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 2
        prize_2 = find_prize("prizeSecond")
        if prize_2:
            embed.add_field(
                name=f"ü•à {prize_2['name']} ({int(prize_2['reward']):,})",
                value=", ".join(prize_2["number"]),
                inline=True
            )

        # ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤ 3 ‡∏ï‡∏±‡∏ß
        front_3 = find_running("runningNumberFrontThree")
        if front_3:
            embed.add_field(
                name=f"üé´ {front_3['name']} ({int(front_3['reward']):,})",
                value=", ".join(front_3["number"]),
                inline=True
            )

        # ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 3 ‡∏ï‡∏±‡∏ß
        back_3 = find_running("runningNumberBackThree")
        if back_3:
            embed.add_field(
                name=f"üé´ {back_3['name']} ({int(back_3['reward']):,})",
                value=", ".join(back_3["number"]),
                inline=True
            )

        # ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 2 ‡∏ï‡∏±‡∏ß
        back_2 = find_running("runningNumberBackTwo")
        if back_2:
            embed.add_field(
                name=f"üéüÔ∏è {back_2['name']} ({int(back_2['reward']):,})",
                value=", ".join(back_2["number"]),
                inline=True
            )

        embed.set_footer(text="üë®‚Äçüíª ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ Pargorn Ruasijan")
        await ctx.send(embed=embed)

    except Exception as e:
        await ctx.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

@bot.command()
async def check_lotto(ctx, number: str):
    if not number.isdigit() or len(number) != 6:
        await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç 6 ‡∏´‡∏•‡∏±‡∏Å ‡πÄ‡∏ä‡πà‡∏ô `/check_lotto 123456`")
        return

    async with aiohttp.ClientSession() as session:
        async with session.get("https://lotto.api.rayriffy.com/latest") as resp:
            if resp.status != 200:
                await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
                return
            data = await resp.json()

    response = data.get("response", {})
    prizes = response.get("prizes", [])
    running = response.get("runningNumbers", [])
    matched = []

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏´‡∏•‡∏±‡∏Å
    for prize in prizes:
        if number in prize["number"]:
            reward = int(prize["reward"])
            matched.append(f"{prize['name']} (‡∏ø{reward:,.0f})")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏´‡∏ô‡πâ‡∏≤ 3 ‡∏ï‡∏±‡∏ß
    if number[:3] in running[0]["number"]:
        reward = int(running[0]["reward"])
        matched.append(f"{running[0]['name']} (‡∏ø{reward:,.0f})")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 3 ‡∏ï‡∏±‡∏ß
    if number[3:] in running[1]["number"]:
        reward = int(running[1]["reward"])
        matched.append(f"{running[1]['name']} (‡∏ø{reward:,.0f})")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 2 ‡∏ï‡∏±‡∏ß
    if number[-2:] in running[2]["number"]:
        reward = int(running[2]["reward"])
        matched.append(f"{running[2]['name']} (‡∏ø{reward:,.0f})")

    embed_color = 0x29AB87 if matched else 0xFF0000
    date_str = response.get('date', '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà')
    embed = discord.Embed(
        title="üéâ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏ß‡∏¢!",
        description=(
            f"üî¢ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏£‡∏≠‡∏Å: **`{number}`**\n"
            f"üóìÔ∏è ‡∏á‡∏ß‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: **{date_str}**\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        ),
        color=embed_color
    )

    if matched:
        embed.add_field(
            name="üèÜ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•",
            value="\n".join(f"üéä **{m}**" for m in matched),
            inline=False
        )
    else:
        embed.add_field(
            name="üò¢ ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•",
            value="‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡πÉ‡∏ô‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üçÄ",
            inline=False
        )

    embed.set_footer(text="üë®‚Äçüíª ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ Pargorn Ruasijan")
    await ctx.send(embed=embed)

bot.run(TOKEN)